'<' + '+ -' + '*'


def parse(self):
        result = self.less()
        if self.current_token.type != TokenType.EOF:
            raise SyntaxError(f"Unexpected token: {self.current_token}")
        return result

    def less(self):
        result = self.plus_minus()
        while self.current_token.type == TokenType.LESS:
            self.consume(TokenType.LESS)
            result = 1 if result < self.plus_minus() else 0
        return result

    def plus_minus(self):
        result = self.nasobenie()
        while self.current_token.type in (TokenType.PLUS, TokenType.MINUS):
            if self.current_token.type == TokenType.PLUS:
                self.consume(TokenType.PLUS)
                result += self.nasobenie()
            else:
                self.consume(TokenType.MINUS)
                result -= self.nasobenie()
        return result

    def nasobenie(self):
        result = self.factor()
        while self.current_token.type == TokenType.TIMES:
            self.consume(TokenType.TIMES)
            result *= self.factor()
        return result


    def factor(self):
        if self.current_token.type == TokenType.NUMBER:
            value = self.current_token.attribute
            self.consume(TokenType.NUMBER)
            return value
        elif self.current_token.type == TokenType.LPAREN:
            self.consume(TokenType.LPAREN)
            result = self.less()
            self.consume(TokenType.RPAREN)
            return result
        else:
            raise SyntaxError(f"Unexpected token{self.current_token}")